---
import locations from '../data/locations.json';

// Props (optional): imageSrc, title
const {
  imageSrc = '/images/Localization/worldmap.png',
  title = 'Global Offices'
} = Astro.props;
---

<section class="mx-auto max-w-6xl px-4 py-10">
  <!-- Map container -->
  <div class="relative w-full overflow-hidden rounded-2xl border bg-white shadow">
    <!-- Maintain aspect ratio so pins stay aligned (adjust to your image) -->
    <div class="relative" style="aspect-ratio: 16 / 9;">
      <img src={imageSrc}
           alt="World map"
           class="pointer-events-none absolute inset-0 h-full w-full object-cover" />

      <!-- Pins -->
      {locations.map((loc) => (
        <button
            type="button"
            aria-label={`Show ${loc.label}`}
            data-id={loc.id}
            class="group absolute -translate-x-1/2 -translate-y-1/2"
            style={`left:${loc.x}%; top:${loc.y}%`}
        >
            <!-- Pin -->
            <svg xmlns="http://www.w3.org/2000/svg"
                class="h-10 w-10 text-blue-600 drop-shadow"
                fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 2C8.1 2 5 5.1 5 9c0 5.2 7 13 7 13s7-7.8 7-13c0-3.9-3.1-7-7-7zM12 11.5c-1.4 0-2.5-1.1-2.5-2.5S10.6 6.5 12 6.5s2.5 1.1 2.5 2.5S13.4 11.5 12 11.5z"/>
            </svg>

            <!-- Callout box (hidden by default; shown for 5s on click) -->
            <div
              id={`callout-${loc.id}`}
              class="pointer-events-none absolute left-1/2 bottom-10 md:bottom-16 lg:bottom-24 hidden -translate-x-1/2
                    rounded-lg bg-white px-2 py-1.5 text-[10px] sm:text-xs md:text-sm shadow-lg ring-1 ring-gray-200
                    flex flex-col gap-1.5 w-48 sm:w-64 md:w-80 lg:w-[360px] whitespace-normal break-words"
            >
              <h4 class="font-bold text-[11px] sm:text-sm md:text-base lg:text-lg leading-tight">
                <span class="text-blue-600">{loc.label}</span>
                <span class="text-pink-500"> {loc.country}</span>
              </h4>
              <!-- Hidden on mobile, shown from sm: upwards -->
              <p class="hidden sm:block text-gray-700 text-[10px] sm:text-xs md:text-sm leading-snug">
                {loc.addresses}
              </p>
            </div>


        </button>
        ))}
    </div>
  </div>

  <!-- Addresses list (revealed by the global toggle) -->
  <div class="mt-6 hidden gap-6 peer-checked/show:grid md:grid-cols-2">
    {locations.map((loc) => (
      <div
        id={`addr-${loc.id}`}
        class="group rounded-2xl border border-gray-200 bg-gradient-to-br from-white to-gray-50 p-6 shadow-md transition hover:shadow-xl hover:border-blue-200"
      >
        <div class="mb-3 flex items-center gap-2">
          <span class="inline-block h-3 w-3 rounded-full bg-blue-600 shadow"></span>
          <h3 class="text-lg font-semibold text-gray-800 group-hover:text-blue-700">
            {loc.label}
          </h3>
        </div>

        <ul class="space-y-2 text-sm text-gray-700">
          {loc.addresses.map((a) => (
            <li class="rounded-md bg-white/70 px-3 py-2 shadow-sm ring-1 ring-gray-100 hover:ring-blue-200">
              {a}
            </li>
          ))}
        </ul>
      </div>
    ))}
  </div>
  
  <!-- (Optional) smooth scroll to the address card when a pin is clicked -->
  <script is:inline>
      document.addEventListener('click', (e) => {
        const btn = e.target.closest('button[data-id]');
        if (!btn) return;
        const id = btn.getAttribute('data-id');
        const box = document.getElementById(`callout-${id}`);
        if (!box) return;

        // show
        box.classList.remove('hidden');

        // reset & set 5s timer
        if (box._timer) clearTimeout(box._timer);
        box._timer = setTimeout(() => {
        box.classList.add('hidden');
        }, 5000);
    }, { passive: true });
  </script>
</section>
